{"version":3,"sources":["Components/TodoList.tsx","Components/FormTodo.tsx","Components/Filtter.tsx","models/todolist.model.tsx","Components/Modal.tsx","Components/Footer.tsx","App.tsx","index.tsx"],"names":["TodoList","props","className","items","map","todo","id","onClick","onCheckHandler","bind","type","checked","isDone","onChange","text","onDeleteTodo","FormTodo","textInputRef","useRef","onSubmit","event","preventDefault","enteredText","current","value","onAddTodo","htmlFor","ref","placeholder","Filtter","tabItem","tab","classNames","activeTab","onFiltterHandler","TodoItem","IsNotEmpty","this","Modal","modalShow","setModalShow","Footer","App","useState","Math","random","toString","todos","setTodos","setActiveTab","filterTodos","filter","newItem","newTodoItem","validate","then","errors","length","Error","prevtodos","catch","err","todoId","checkedTodos","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f12a5dcb.chunk.js","sourcesContent":["import React from \"react\";\nimport { Todo } from \"../models/todolist.model\";\nimport \"../css/TodoList.scss\";\n\ninterface TodoListProps {\n  items: Todo[];\n  onDeleteTodo: (id: string) => void;\n  onCheckHandler: (id: string) => void;\n}\n\nexport const TodoList: React.FC<TodoListProps> = (props) => {\n  return (\n    <ul className=\"inner todoList\">\n      {props.items.map((todo) => (\n        <li key={todo.id} className={todo.id}>\n          <div onClick={props.onCheckHandler.bind(this, todo.id)}>\n            <input type=\"checkbox\" checked={todo.isDone} onChange={() => {}} />\n            <p>{todo.text}</p>\n          </div>\n\n          <button onClick={props.onDeleteTodo.bind(this, todo.id)}>\n            Delete\n          </button>\n        </li>\n      ))}\n    </ul>\n  );\n};\n","import React, { useRef } from \"react\";\nimport \"../css/FormTodo.scss\";\n\ninterface addFunctionProps {\n  onAddTodo: (newItem: string) => void;\n}\n\nexport const FormTodo: React.FC<addFunctionProps> = (props) => {\n  // useRefを実行、このrefを使用しinputDOMオブジェクトにrefオブジェクトを割り当てる\n  const textInputRef = useRef<HTMLInputElement>(null);\n\n  const todoSubmitHandler = (event: React.FormEvent) => {\n    event.preventDefault();\n    const enteredText = textInputRef.current!.value;\n    props.onAddTodo(enteredText);\n    textInputRef.current!.value = \"\";\n  };\n\n  return (\n    <form onSubmit={todoSubmitHandler} className=\"inner\">\n      <div className=\"inputForm\">\n        <label htmlFor=\"todo-text\">TodoList</label>\n        <input\n          type=\"text\"\n          id=\"todo-text\"\n          ref={textInputRef}\n          placeholder=\"Enter to add.\"\n        />\n      </div>\n      <button type=\"submit\" id=\"submitBtn\">Add</button>\n    </form>\n  );\n};\n","import React from \"react\";\nimport classNames from 'classnames';\nimport \"../css/Filtter.scss\";\nimport { Tab } from \"../models/tab.model\";\n\ninterface Filtterprops {\n    tabItem: Tab[];\n    activeTab: Tab;\n    onFiltterHandler: (tab: Tab) => void;\n}\n\nexport const Filtter:React.FC<Filtterprops> = props => {\n  return (\n    <div className=\"inner\">\n      <ul className=\"tabList\">\n        {props.tabItem.map((tab) => (\n          <li className={\n            classNames(\"tab\", {\"is_active\" : props.activeTab === tab}) \n          } key={tab}>\n            <button onClick={props.onFiltterHandler.bind(null, tab)}>\n              {tab}\n            </button>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n}\n","import { IsNotEmpty } from \"class-validator\";\n\nexport interface Todo {\n  id: string;\n  text: string;\n  isDone: boolean;\n}\n\nexport class TodoItem implements Todo {\n  id: string;\n\n  @IsNotEmpty()\n  text: string;\n  isDone: boolean;\n\n  constructor(id: string, text: string, isDone: boolean) {\n    this.id = id;\n    this.text = text;\n    this.isDone = isDone;\n  }\n}","import React from \"react\";\nimport \"../css/Modal.scss\";\n\ninterface ModalProps {\n  modalShow: boolean;\n  setModalShow: (modalShow: boolean) => void;\n}\n\nexport const Modal: React.FC<ModalProps> = ({ modalShow, setModalShow }) => {\n  return modalShow ? (\n    <div id=\"alertModalWrapper\">\n      <div className=\"overlay\">\n        <div className=\"content\">\n          <div className=\"text\">\n            <p>Please enter something to do.</p>\n          </div>\n          <button onClick={setModalShow.bind(null, false)} className=\"closeBtn\">\n            Close\n          </button>\n        </div>\n      </div>\n    </div>\n  ) : null;\n};\n","import React from \"react\";\nimport \"../css/Footer.scss\";\n\nexport const Footer: React.FC = () => {\n    return (\n        <footer>&copy; 2021 YUDAI1995</footer>\n    )\n\n}","import React, { useState } from \"react\";\nimport { TodoList } from \"./Components/TodoList\";\nimport { FormTodo } from \"./Components/FormTodo\";\nimport { Filtter } from \"./Components/Filtter\";\nimport { Todo, TodoItem } from \"./models/todolist.model\";\nimport { Modal } from \"./Components/Modal\";\nimport { Footer } from \"./Components/Footer\";\nimport { Tab } from \"./models/tab.model\";\nimport { validate } from \"class-validator\";\n\n// React Function Component 型定義\nconst App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([\n    new TodoItem(Math.random().toString(), \"Todo Item\", false),\n  ]);\n\n  const [activeTab, setActiveTab] = useState<Tab>(\"All\");\n  const [modalShow, setModalShow] = useState<boolean>(false);\n\n  const todoAddHandler = (newItem: string) => {\n    // todosが常に最新か保証できないため\n    //setTodos([{ id: Math.random().toString(), text: newItem }, ...todos]);\n\n    const newTodoItem = new TodoItem(Math.random().toString(), newItem, false);\n    validate(newTodoItem)\n      .then((errors) => {\n        if (errors.length > 0) {\n          throw new Error(\"No item.\");\n        }\n        // prevtodosとして常に一つ前の状態のtodosを受け取るようにする\n        setTodos((prevtodos) => [newTodoItem, ...prevtodos]);\n      })\n      .catch((err) => {\n        setModalShow(true);\n      });\n  };\n\n  const todoDeleteHandler = (todoId: string) => {\n    setTodos((prevtodos) => prevtodos.filter((todo) => todo.id !== todoId));\n  };\n\n  const tabItem: Tab[] = [\"All\", \"Todo\", \"Done\"];\n  const todoFiltterHandler = (tab: Tab) => {\n    setActiveTab(tab);\n  };\n\n  const filterTodos = todos.filter((todo) => {\n    if (activeTab === tabItem[0]) return true;\n    if (activeTab === tabItem[1]) return !todo.isDone;\n    if (activeTab === tabItem[2]) return todo.isDone;\n    else return true;\n  });\n\n  const onCheckHandler = (todoId: string) => {\n    const checkedTodos = todos.map((todo) => {\n      if (todo.id === todoId) {\n        todo.isDone = !todo.isDone;\n      }\n      return todo;\n    });\n    setTodos(checkedTodos);\n  };\n\n  return (\n    <div className=\"App\">\n      <FormTodo onAddTodo={todoAddHandler} />\n      <Filtter\n        tabItem={tabItem}\n        activeTab={activeTab}\n        onFiltterHandler={todoFiltterHandler}\n      />\n      <TodoList\n        items={filterTodos}\n        onDeleteTodo={todoDeleteHandler}\n        onCheckHandler={onCheckHandler}\n      />\n      <Modal modalShow={modalShow} setModalShow={setModalShow} />\n      <Footer />\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}